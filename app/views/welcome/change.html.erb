<section id="typography">
  <div class="page-header">
    <h1>UEditor For Rails <small>基于UEditor修改，适合rails使用</small></h1>
  </div>

  <!-- Headings & Paragraph Copy -->
  <div class="row">
    <div class="span12">
      <p>
	UEditor提供 PHP .NET JAVA的版本，没有提供RUBY的，项目要用到，闲来无事，改写一下。
      </p>
      <ul>
		<li>原生态的JAVASCRIPT不是很会，所以更新基于JQUERY。</li>
		<li>将图片上传，文件上传由PHP改为Rails</li>
      </ul>
    </div>
    
  </div>
  <div class="alert alert-success">本示例所修改的UEDITOR位于<%=@ueditor%>目录</div>
  <!-- Misc Elements -->
  <h2>更改步骤</h2>
  <div class="row">
    <div class="span12">
      <ol>
        <li>添加Jquery框架</li>
        <li>添加AJAX发送头，传递X-CSRF-Token防止在AJAX中RAILS SESSION丢失</li>
        <%=@ueditor%>editor_all.js 第4795行
        <pre class="prettyprint linenums:4795">
ajaxRequest.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');
ajaxRequest.send(submitStr);</pre>
        改为
        <pre class="prettyprint linenums:4795">
ajaxRequest.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');
ajaxRequest.setRequestHeader('X-CSRF-Token', $("meta[name='csrf-token']").attr('content'));
ajaxRequest.send(submitStr);</pre>

将<%=@ueditor%>dialogs/image/image.html 把改写为用RAILS
<ul>
<li>修改editor_all.js将点击图片的路径改掉</li>
<pre class="prettyprint linenums:102">
'insertimage':'~/dialogs/image/image.html',
</pre>  
<pre class="prettyprint linenums:102">
'insertimage':'/ueditor/image',
</pre>
添加路由信息
<pre class="prettyprint linenums">
get 'ueditor/image' => 'ueditor#showimage'
</pre>
<li>将~/dialogs/image/image.html的方法移入/ueditor/image
  <ul>
    <li>注意更改对应的路径</li>
    <li>加入jquery.min.js</li>
    <li>加入&lt;%= csrf_meta_tag %&gt;</li>
    <li>FLASH上传会有SESSION丢失的问题，要将X-CSRF-Token传递，对应问题可以GOOGLE rails flash session 丢失</li>
  </ul>
</li>
<pre class="prettyprint linenums:104">
ext:'{"X-CSRF-Token":"&lt;%=form_authenticity_token-%&gt;","param2":"value2"}'
</pre>

</ul>
        <li>修改各文件上传的PHP动作，改为RAILS实现</li>
        <ul>
          <li>也就是将原文件包里的PHP全部改为RAILS，路由对照关系如下（原来的方法可以参照editor_config.js）</li>
          <pre class="prettyprint linenums:39">
//图片上传配置区
,imageUrl:URL+"php/imageUp.php"             //图片上传提交地址
,imagePath:URL + "php/"                     //图片修正地址，引用了fixedImagePath,如有特殊需求，可自行配置
//,imageFieldName:"upfile"                   //图片数据的key,若此处修改，需要在后台对应文件修改对应参数
//,compressSide:0                            //等比压缩的基准，确定maxImageSideLength参数的参照对象。0为按照最长边，1为按照宽度，2为按照高度
//,maxImageSideLength:900                    //上传图片最大允许的边长，超过会自动等比缩放,不缩放就设置一个比较大的值，更多设置在image.html中

//涂鸦图片配置区
,scrawlUrl:URL+"php/scrawlUp.php"           //涂鸦上传地址
,scrawlPath:URL+"php/"                            //图片修正地址，同imagePath

//附件上传配置区
,fileUrl:URL+"php/fileUp.php"               //附件上传提交地址
,filePath:URL + "php/"                   //附件修正地址，同imagePath
//,fileFieldName:"upfile"                    //附件提交的表单名，若此处修改，需要在后台对应文件修改对应参数

 //远程抓取配置区
//,catchRemoteImageEnable:true               //是否开启远程图片抓取,默认开启
,catcherUrl:URL +"php/getRemoteImage.php"   //处理远程图片抓取的地址
,catcherPath:URL + "php/"                  //图片修正地址，同imagePath
//,catchFieldName:"upfile"                   //提交到后台远程图片uri合集，若此处修改，需要在后台对应文件修改对应参数
//,separater:'ue_separate_ue'               //提交至后台的远程图片地址字符串分隔符
//,localDomain:[]                            //本地顶级域名，当开启远程图片抓取时，除此之外的所有其它域名下的图片都将被抓取到本地,默认不抓取127.0.0.1和localhost

//图片在线管理配置区
,imageManagerUrl:URL + "php/imageManager.php"       //图片在线管理的处理地址
,imageManagerPath:URL + "php/"                                    //图片修正地址，同imagePath

//屏幕截图配置区
,snapscreenHost: '127.0.0.1'                                  //屏幕截图的server端文件所在的网站地址或者ip，请不要加http://
,snapscreenServerUrl: URL +"php/imageUp.php" //屏幕截图的server端保存程序，UEditor的范例代码为“URL +"server/upload/php/snapImgUp.php"”
,snapscreenPath: URL + "php/"
//,snapscreenServerPort: 80                                    //屏幕截图的server端端口
//,snapscreenImgAlign: 'center'                                //截图的图片默认的排版方式

//word转存配置区
,wordImageUrl:URL + "php/imageUp.php"             //word转存提交地址
,wordImagePath:URL + "php/"                       //
//,wordImageFieldName:"upfile"                     //word转存表单名若此处修改，需要在后台对应文件修改对应参数

//获取视频数据的地址
,getMovieUrl:URL+"php/getMovie.php"                   //视频数据获取地址
          </pre>
          修改为（不需要URL修正，原URL修正用于把图片上传到当前文件夹下，UEDITOR目录不确定的情况，RAILS中我们使用paperclip进行上传图片）
          <pre class="prettyprint linenums:39">
//图片上传配置区
,imageUrl:"/ueditor/imageUp"             //图片上传提交地址
,imagePath:""                     //图片修正地址，引用了fixedImagePath,如有特殊需求，可自行配置
//,imageFieldName:"upfile"                   //图片数据的key,若此处修改，需要在后台对应文件修改对应参数
//,compressSide:0                            //等比压缩的基准，确定maxImageSideLength参数的参照对象。0为按照最长边，1为按照宽度，2为按照高度
//,maxImageSideLength:900                    //上传图片最大允许的边长，超过会自动等比缩放,不缩放就设置一个比较大的值，更多设置在image.html中

//涂鸦图片配置区
,scrawlUrl:"/ueditor/scrawlUp"           //涂鸦上传地址
,scrawlPath:""                            //图片修正地址，同imagePath

//附件上传配置区
,fileUrl:"/ueditor/fileUp"               //附件上传提交地址
,filePath:""                   //附件修正地址，同imagePath
//,fileFieldName:"upfile"                    //附件提交的表单名，若此处修改，需要在后台对应文件修改对应参数

 //远程抓取配置区
//,catchRemoteImageEnable:true               //是否开启远程图片抓取,默认开启
,catcherUrl:"/ueditor/getRemoteImage"   //处理远程图片抓取的地址
,catcherPath:""                  //图片修正地址，同imagePath
//,catchFieldName:"upfile"                   //提交到后台远程图片uri合集，若此处修改，需要在后台对应文件修改对应参数
//,separater:'ue_separate_ue'               //提交至后台的远程图片地址字符串分隔符
//,localDomain:[]                            //本地顶级域名，当开启远程图片抓取时，除此之外的所有其它域名下的图片都将被抓取到本地,默认不抓取127.0.0.1和localhost

//图片在线管理配置区
,imageManagerUrl:"/ueditor/imageManager"       //图片在线管理的处理地址
,imageManagerPath:""                                    //图片修正地址，同imagePath

//屏幕截图配置区
,snapscreenHost: '127.0.0.1'                                  //屏幕截图的server端文件所在的网站地址或者ip，请不要加http://
,snapscreenServerUrl: "/ueditor/imageUp" //屏幕截图的server端保存程序，UEditor的范例代码为“URL +"server/upload/php/snapImgUp.php"”
,snapscreenPath: ""
//,snapscreenServerPort: 80                                    //屏幕截图的server端端口
//,snapscreenImgAlign: 'center'                                //截图的图片默认的排版方式

//word转存配置区
,wordImageUrl:"/ueditor/imageUp"             //word转存提交地址
,wordImagePath:""                       //
//,wordImageFieldName:"upfile"                     //word转存表单名若此处修改，需要在后台对应文件修改对应参数

//获取视频数据的地址
,getMovieUrl:"/ueditor/getMovie"                   //视频数据获取地址
          </pre>
          添加对应的路由，再把对应的实现方法改为RAILS (在editor_all.js中可以看到所有的ajax方法都为post)
          <pre class="prettyprint linenums">
post 'ueditor/imageUp' => 'ueditor#imageUp'
post 'ueditor/imageManager' => 'ueditor#imageManager'
post 'ueditor/getRemoteImage' => 'ueditor#getRemoteImage'
post 'ueditor/fileUp' => 'ueditor#fileUp'
post 'ueditor/getMovie' => 'ueditor#getMovie'
          </pre>
          <li>图片我们以paperclip存储，建立对应的图片库</li>
          <li>改写对应的imageUp,imageManager,getRemoteImage,fileUp,getMovie方法,注意,输出要和PHP一致,原有的imageManager方法只是把文件夹中的图片全部读出来,我这里扩展了瀑布流的方法(JS很烂)</li>
        </ul>
      </ol>
    </div>
    
  </div><!-- /row -->
</section>
